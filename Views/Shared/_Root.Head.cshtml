@using StackExchange.Profiling
@using Nop.Core.Configuration
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Services.Events
@using Nop.Services.Security
@using Nop.Web.Framework.Events
@using Nop.Core
@using Nop.Core.Events
@using Microsoft.AspNetCore.Http
@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject SeoSettings seoSettings
@inject AppSettings appSettings
@inject Nop.Services.Localization.ILanguageService languageService
@inject IThemeContext themeContext
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor

@{
    var themeName = await themeContext.GetWorkingThemeNameAsync();
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console
    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.js");
        Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/bpopup.min.js");
        Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/easing.js");
    }
    else
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
        Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/bpopup.min.js");
        Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/easing.js");
    }

    Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/main.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/owl.carousel.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/jquery.cookie.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/jquery.scrollbar.min.js");

    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    Html.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery/jquery.min.js");

    Html.AppendScriptParts(ResourceLocation.Footer, $"~/Themes/{themeName}/Content/js/jquery-3.3.1.min.js");

    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var displayMiniProfiler = appSettings.CommonConfig.MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    //event
    await eventPublisher.PublishAsync(new PageRenderingEvent(this.Html));
    var param = httpContextAccessor.HttpContext.Request.Query["utm_av"];
    var ageVerified = false;
}

<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(await workContext.GetWorkingLanguageAsync())" @(await this.ShouldUseRtlThemeAsync() ? Html.Raw(" dir=\"rtl\"") : null) @Html.NopPageCssClasses()>
<head>
    <title>@Html.NopTitle()</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.NopMetaDescription())" />
    <meta name="keywords" content="@(Html.NopMetaKeywords())" />
    <meta name="generator" content="nopCommerce" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    @Html.NopHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @await Component.InvokeAsync("Widget", new { widgetZone = "css_files_after_head_tag_cookiesBakery" })
    @Html.NopCssFiles(ResourceLocation.Head)
    @Html.NopScripts(ResourceLocation.Head)
    @Html.NopCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    @Html.NopInlineScripts(ResourceLocation.Head)
    <!--Powered by nopCommerce - https://www.nopCommerce.com-->
</head>
<body>
    @{
        var c = httpContextAccessor.HttpContext.Request.Cookies["verified"];
        if (c == null)
        {
            Html.RenderPartial($"~/Themes/{themeName}/Views/Shared/AgeCheck.cshtml");
            var cookieOptions = new CookieOptions
            {
                Expires = DateTime.Now.AddDays(1)
            };

            httpContextAccessor.HttpContext.Response.Cookies.Append("verified", "yes", cookieOptions);
        }
    }
    @RenderBody()
    @Html.NopCssFiles(ResourceLocation.Footer)
    @Html.NopScripts(ResourceLocation.Footer)
    @Html.NopInlineScripts(ResourceLocation.Footer)
</body>
</html>
